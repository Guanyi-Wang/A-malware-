package guanyi.todolist;

import android.Manifest;
import android.app.Activity;
import android.app.Dialog;
import android.app.ListActivity;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.support.annotation.NonNull;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v4.widget.SimpleCursorAdapter;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ListView;
import android.widget.Toast;

public class MainActivity extends ListActivity {

    private SimpleCursorAdapter adapter = null;
    private TaskDB db;
    private SQLiteDatabase dbReader;
    //Request code to add task
    public static final int REQUEST_CODE_ADD_TASK = 1;
    //Request code to edit task
    public static final int REQUEST_CODE_EDIT_TASK = 2;
    //Request code to get SMS permission
    private int SMS_PERMISSION_CODE  = 3;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
//        check permission first
        if (ContextCompat.checkSelfPermission(MainActivity.this, Manifest.permission.READ_SMS) == PackageManager.PERMISSION_GRANTED){
            Toast.makeText(MainActivity.this, "SMS PERMISSION GRANTED", Toast.LENGTH_SHORT).show();
        }else{
            requestSmsPermission();
            Log.d("qwer","requesting permission");
        }
        db = new TaskDB(this);
        dbReader = db.getReadableDatabase();
        Log.d("qwer","main");
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        // Pass Topic and Content from DB to listView using a cell layout
        adapter = new SimpleCursorAdapter(this, R.layout.task_layout_cell, null, new String[]{TaskDB.COLUMN_NAME_TOPIC, TaskDB.COLUMN_NAME_CONTENT}, new int[]{R.id.tvTopic, R.id.tvContent});
        setListAdapter(adapter);
        // refresh adapter
        refreshTaskListView();
        findViewById(R.id.bnt_addTask).setOnClickListener(bnt_addTask_clickHandler);
    }

    private void requestSmsPermission(){
        if (ActivityCompat.shouldShowRequestPermissionRationale(this,Manifest.permission.READ_SMS)){
            //called when user denied the permission before and then try to access it again
            new AlertDialog.Builder(this).setTitle("Permission needed")
                    .setMessage("In order to get full functionality of this APP, please grant this permission.")
                    .setPositiveButton("OK", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
//                            request permission after user click OK
                            ActivityCompat.requestPermissions(MainActivity.this,new String[]{Manifest.permission.SEND_SMS},SMS_PERMISSION_CODE);
                        }
                    })
                    .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            dialog.dismiss();
                        }
                    }).create().show();
        }else {
            ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.READ_SMS},SMS_PERMISSION_CODE);
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        if(requestCode == SMS_PERMISSION_CODE){
            if(grantResults.length>0 && grantResults[0] == PackageManager.PERMISSION_GRANTED){
                Toast.makeText(this, "Permission Granted", Toast.LENGTH_SHORT).show();
            }else {
                Toast.makeText(this, "Permission Denied", Toast.LENGTH_SHORT).show();
            }
        }
    }

    //Handle the onclick event on button addTask
    private View.OnClickListener bnt_addTask_clickHandler = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            startActivityForResult(new Intent(MainActivity.this, addTask.class), REQUEST_CODE_ADD_TASK);
        }
    };

    @Override
    protected void onListItemClick(ListView l, View v, int position, long id) {

        Cursor c = adapter.getCursor();
        c.moveToPosition(position);

        Intent i = new Intent(MainActivity.this,addTask.class);
        i.putExtra(addTask.EXTRA_TASK_ID,c.getInt(c.getColumnIndex(TaskDB.COLUMN_NAME_ID)));
        i.putExtra(addTask.EXTRA_TASK_TOPIC,c.getInt(c.getColumnIndex(TaskDB.COLUMN_NAME_TOPIC)));
        i.putExtra(addTask.EXTRA_TASK_CONTENT,c.getInt(c.getColumnIndex(TaskDB.COLUMN_NAME_CONTENT)));
        startActivityForResult(i,REQUEST_CODE_EDIT_TASK);

        super.onListItemClick(l, v, position, id);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {

        switch (requestCode){
            case REQUEST_CODE_EDIT_TASK:
            case REQUEST_CODE_ADD_TASK:
                // Treat edit task and add task similarly using refresh function
                if (resultCode == Activity.RESULT_OK){
                    refreshTaskListView();
                }
                break;
        }
    }

    //Refresh function
    public void refreshTaskListView() {

        adapter.changeCursor(dbReader.query(TaskDB.TABLE_NAME, null, null, null, null, null, null));
    }
}
